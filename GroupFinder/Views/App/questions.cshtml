@using GroupFinder.Models
@model GroupFinder.Models.Questions

@section scripts {

    <script src="http://ajax.aspnetcdn.com/ajax/jQuery/jquery-1.10.2.min.js" type="text/javascript"></script>
    <script src="http://ajax.aspnetcdn.com/ajax/jquery.ui/1.9.2/jquery-ui.min.js" type="text/javascript"></script>

    

    <script type="text/javascript">

      $(document).ready(function () {
          $("#songorartist").autocomplete({
        source: function (request, response) {
            $.ajax({
                url: '@Url.Action("GetSpotifyData", "App")',
                datatype: "json",
                data: {
                    searchTerm: request.term
                },
                success: function (data) {
                    response($.map(data, function (val, item) {
                        return {
                            label: val.Name,
                            value: val.Name,
                            customerId: val.ID
                        }
                    }))
                }
            })
        },
        select: function (event, ui) {
            $("#songorartist").val(ui.item.customerId);
        }
    });
});

    </script>

}

@{
    ViewBag.Title = "View";
}


<div class="well" style="background-color : white">
    @{
        var weather = (double)ViewData["weather"];
        if (weather != null)
        {
            <p style="color:yellow">The current tempurature is @weather </p>
        }
    }
</div>

<div class="well" style="background-color : lightgray">
    @{
        var name = (string)ViewData["classMateName"];
        if (name != null)
        {
            <p style="color:black">Welcome @name please answer the below questions so we can know a little more about you </p>
        }
    }
</div>


@using (Html.BeginForm("QuestionsSubmit", "App", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h3>Take the Quiz!</h3>
        <hr />

        @{
            List<SelectListItem> listItems = new List<SelectListItem>();
            foreach (IdealSaturday i in Model.idealSaturdays)
            {
                listItems.Add(new SelectListItem
                {
                    Text = i.idealSaturday1,
                    Value = i.IdealSaturdayId.ToString()
                });
            }
        }
        @{
            List<SelectListItem> listItemsVacations = new List<SelectListItem>();
            foreach (Vacation i in Model.vacations)
            {
                listItemsVacations.Add(new SelectListItem
                {
                    Text = i.vacation1,
                    Value = i.VacationId.ToString()
                });
            }
        }
        @{
            List<SelectListItem> listItemsFoods = new List<SelectListItem>();
            foreach (Food i in Model.foods)
            {
                listItemsFoods.Add(new SelectListItem
                {
                    Text = i.food1,
                    Value = i.FoodId.ToString()
                });
            }
        }



        @Html.ValidationSummary(true, "", new { @class = "text-center" })
        <div class="form-group">

            <div class="row">
              


                <div class="col-sm-3">

                    @Html.LabelFor(model => Model.idealsaturdayid, "What is your ideal Saturday activity?", new { @class = "control-label" })
                    @Html.DropDownListFor(model => model.idealsaturdayid, listItems, new { @class = "form-control" }) <br />
                </div>
                <div class="col-sm-3">
                    @Html.LabelFor(model => Model.vactionid, "What is your dream vacation?", new { @class = "control-label" })
                    @Html.DropDownListFor(model => model.vactionid, listItemsVacations, new { @class = "form-control" }) <br />
                </div>
                <div class="col-sm-3">
                    @Html.LabelFor(model => Model.foodid, "Favorite food?", new { @class = "control-label" })
                    @Html.DropDownListFor(model => model.foodid, listItemsFoods, new { @class = "form-control" }) <br />
                </div>
                <div class="col-sm-3">
                    
                    @Html.LabelFor(model => Model.songorartist, "Enter your favorite song or artist!", new { @class = "control-label" })

                    @Html.TextBoxFor(model => Model.songorartist, new { @class = "form-control" })
                    <br /><br />
                    @Html.HiddenFor(model => Model.songorartist)

                    @Html.HiddenFor(m => m.classmateid)
                </div>
                    
                        <input type="submit" value="See your Results!" class="btn input-block-level form-control" />

                    </div>
                </div>
            </div>
        
}

